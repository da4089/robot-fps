#! /usr/bin/env python
########################################################################
# robot-fps, Financial Protocol Simulator for Robot Framework
#
# Copyright (C) 2014 David Arnold
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

import argparse
import rfps

from twistedremoteserver import TwistedRemoteServer
from twisted.internet import reactor
from twisted.web.resource import Resource
from twisted.web.server import Site


########################################################################

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="A Robot Framework remote "
                                                 "server that provides both "
                                                 "client and server-side "
                                                 "simulation of the OUCH4 "
                                                 "protocol.")
    parser.add_argument("-p", "--port",
                        nargs=1,
                        type=int,
                        help="TCP port number for remote Robot Framework "
                             "access.",
                        default=7340)
    parser.add_argument("-i", "--interface",
                        nargs=1,
                        type=str,
                        help="IP address of listening interface.  Default is "
                             "%(default)s.",
                        default="0.0.0.0")
    args = parser.parse_args()
    print args.interface
    print args.port

    ouch_robot = rfps.OuchRobot()
    robot_api = TwistedRemoteServer(ouch_robot, args.interface, args.port[0])

    root = Resource()
    root.putChild("RPC2", robot_api)
    factory = Site(root)
    reactor.listenTCP(args.port[0], factory, interface=args.interface)
    reactor.run()



########################################################################
